//------------------------------------------------
//--- 010 Editor v13.0.1 Binary Template
//
//      File: 
//   Authors: Shadow-Link
//   Version: 
//   Purpose: 1080 Snowboarding save file format
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

typedef struct {
    uint value1;
    uint value2;
} Checksum;

typedef struct {
    byte minutes;
    byte seconds;
    byte miliseconds;
} Time;

typedef struct {
    byte initials[3]; // A = 0, B = 1, C = 2 etc
} Initials;

typedef enum <byte> {
    TAHOE_151,
    MERLOT_147,
    B_LINE_149,
    SCOUT_156,
    TAHOE_155,
    SCOUT_LTD_162,
    MERLOT_143,
    B_LINE_154
} Board;

typedef enum <byte> {
    DION_BLASTER,
    KENSUKE_KIMACHI,
    AKARI_HAYAMI,
    RICKY_WINTERBORN,
    ROB_HAYWOOD
} Boarder;

typedef struct {
    Boarder boarder : 3;
    Board board : 5;
} BoarderInfo;

typedef struct {
    uint score;
} Score;

typedef struct {
    BoarderInfo boarderInfo;
    byte isBot; // 0 for CPU, -1 for player?
    Initials initials;
    Time time;
} TimeTrialRecordSlot;

typedef struct {
    BoarderInfo boarderInfo;
    Initials initials;
    Score score; 
} TrickAttackRecordSlot;

typedef struct {
    TimeTrialRecordSlot timeTrialSlot[3];
    TrickAttackRecordSlot trickAttackSlot[3];
} HighScores;

typedef struct {
    byte unknown[3];
    BoarderInfo boarderInfo;
    byte unknown1[1];
    Initials initials;
    Score crystalLake;
    Score airMake;
    Score crystalPeak;
    Score halfPipe;
    Score goldenForest;
    Score totalScore;
} ContestScores;

typedef struct {
    HighScores levelAirMake;
    HighScores levelHalfPipe;
    HighScores levelCrystalLake;
    HighScores levelCrystalPeak;
    HighScores levelGoldenForest;
    HighScores levelMountainVillage;
    HighScores levelDragonCave;
    HighScores levelDeadlyFall;

    Checksum checksum; // ?
} HighScoreData;

typedef struct {
    ContestScores contestScores[3];
    Checksum checksum; // ?
} ContestScoreData;

typedef enum <byte> {
    STEREO,
    HEADSET,
    MONO
} AudioSetup;

typedef enum <byte> {
    ENGLISH,
    JAPANESE
} Language;

typedef struct {
    byte backgroundMusic;   // 0 - 10
    byte soundEffects;      // 0 - 10
    byte voice;             // 0 - 10
    byte padding[3];
} SoundSettings;

typedef enum <ushort> {
    NORMAL = 1,
    HARD = 2,
    EXPERT = 3
} MatchRace;

typedef struct {
    HighScoreData highScoreData;
    ContestScoreData contestScoreData;

    ushort unknown1; // Changes when finishing a level?
    MatchRace unlockedMatchRace;
    byte padding; // Or part of the AudioSetup / Language?

    // Audio and language setting combined in single byte
    AudioSetup audioSetup : 2;
    Language language : 1;

    byte unknown2[8];
    byte unknown3; // Changes when finishing a level
    byte unknown4[3];
    SoundSettings soundSettings;
    Checksum checksum; // ?

    byte unknown5[16];
    Checksum checksum2; // ?
} SaveData;

typedef struct {
    Checksum checksum;
    SaveData saveData;
    byte padding[31656];
    SaveData backup;
} SaveFile;

BigEndian();
SaveFile saveFile;
